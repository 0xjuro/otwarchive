<% work_skin = params[:skin_type] && params[:skin_type] == 'WorkSkin'
   revert_default = ts('Revert to Default Skin')%>

<!--subnav-->
<h3 class="landmark heading">Navigation</h3>
<ul class="navigation actions" role="navigation">
  <% if session[:site_skin] %>
    <li><%= link_to revert_default, unset_skins_path %></li>
  <% end %>
	<% if logged_in? %>
	  <% if (current_user.preference.skin_id != Skin.default.id) && session[:site_skin].blank? %>
	    <li>
    	  <%= form_for(current_user.preference, :url => {:controller => :preferences, :action => :update, :user_id => current_user}, :method => 'put') do |f| %>
          <%= f.hidden_field :skin_id, :value => Skin.default.id %>
          <%= f.submit revert_default %>
        <% end %>
      </li>
    <% end %>

    <% unless controller.action_name == 'new' %>
      <li>
        <%= skin_name = work_skin ? "Work" : "Site"
            link_to ts("Create #{skin_name} Skin"), new_skin_path(:skin_type => work_skin ? "WorkSkin" : "Skin") %>
      </li>
    <% end %>
    
    <!-- wizard-to-custom-css switchers for new and edit -->
    <% if action_name == 'new' ||  (action_name == 'edit' && !@skin.is_a?(WorkSkin)) %>
      <li id="form-link">
        <%= span_if_current ts('Write Custom CSS'), new_skin_path, params[:wizard].blank? %>
      </li>
      <li id="wizard-link">
        <%= span_if_current ts('Use Wizard'), new_skin_path(:wizard => true), params[:wizard] %>
      </li>
    <% end %>
  <% end %>
</ul>
<!--/subnav-->
