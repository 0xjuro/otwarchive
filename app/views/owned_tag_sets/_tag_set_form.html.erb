<h3><%= ts("Notes") %></h3>
<ul class="notes">
	<li>You can use tag sets when running a challenge (and eventually will be able to use them for browsing).</li>
	<li>Visible tag sets can be viewed and used by others.</li> 
	<li>Tag sets that are open to nominations can take nominations from the public.</li> 
</ul>

<!-- /descriptions-->

<!--main content-->
<h3 class="landmark">Tag Set Settings</h3>
<%= form_for(@tag_set, :url => (@tag_set.new_record? ? tag_sets_path : tag_set_path(@tag_set)), :html => {:method => (@tag_set.new_record? ? :post : :put)}) do |tag_set_form| %>
  <%= error_messages_for @tag_set %>

  <fieldset class="tag_set preface profile">
		<legend>Management</legend>
		<h3>Management</h3>
		<p class="notes">
			To add or remove an owner or moderator, enter their name. If they are currently on the list they will be removed; if not, they will be added.
			Note that you cannot remove the sole owner of a tag set.
		</p>
		
		<dl>
		  <dt><%= ts("Current Owners") %></dt>
		  <dd>
		    <ul>
		      <%= @tag_set.new_record? ? content_tag(:li, current_user.default_pseud.byline) : @tag_set.owners.collect(&:byline).sort.map {|owner| content_tag(:li, owner)}.join(', ').html_safe =%>
		    </ul>
		  </dd>
		  <dt><%= tag_set_form.label :owner_changes, ts("Add/Remove Owners: ") %></dt>
  	  <dd><%= tag_set_form.text_field :owner_changes, autocomplete_options("pseud", :size => 80) %></dd>

		  <dt><%= ts("Current Moderators") %></dt>
		  <dd>
		    <ul><%= @tag_set.moderators.empty? ? content_tag(:li, ts("None")) : @tag_set.moderators.collect(&:byline).sort.map {|mod| content_tag(:li, mod)}.join(', ').html_safe =%></ul>
		  </dd>
		  
		  <dt><%= tag_set_form.label :moderator_changes, ts("Add/Remove Moderators: ") %></dt>
		  <dd><%= tag_set_form.text_field :moderator_changes, autocomplete_options("pseud", :size => 80) %></dd>
		</dl>  	
	</fieldset>

	<fieldset class="preface profile">
    <legend>Description</legend>
    <h3>Description</h3>
		<dl>
			<dt><%= tag_set_form.label :title, ts("Title* (text only)") %></dt>
			<dd><%= tag_set_form.text_field :title %></dd>
			
			<dt><%= tag_set_form.label :description, ts("Brief Description") %></dt>
			<dd><%= tag_set_form.text_field :description %></dd>

			<dt><%= tag_set_form.label :visible, ts("Visible to the public?") %></dt>
			<dd><%= tag_set_form.check_box :visible %></dd>

			<dt><%= tag_set_form.label :nominated, ts("Open to nominations?") %></dt>
			<dd><%= tag_set_form.check_box :nominated, :onchange => "if ($j(this).is(':checked')){$('nomination_limits').show();} else {$('nomination_limits').hide();}" %></dd>
		</dl>
	</fieldset>
	
	<fieldset id="nomination_limits" class="preface profile hideme">
	  <legend>Nomination Limits</legend>
	  <h3>Nomination Limits</h3>
	  <p class="notes">Enter however many tags of each type you want users to be able to nominate.</p>
	  <dl>
	    <% TagSet::TAG_TYPES_INITIALIZABLE.each do |tag_type| %>
        <dt><%= tag_set_form.label "#{tag_type}_nomination_limit".to_sym %></dt>
        <dd><%= tag_set_form.text_field "#{tag_type}_nomination_limit".to_sym, :size => 4 %></dd>
	    <% end %>
	  </dl>
	</fieldset>

  <fieldset class="preface profile">
    <legend>Tags In Set</legend>
    <h3>Tags In Set</h3>
    <% @tag_set.build_tag_set unless @tag_set.tag_set %>
    <%= tag_set_form.fields_for :tag_set do |internal_tag_set_form| %>
      <% TagSet::TAG_TYPES.each do |tag_type| %>
        <fieldset class="tag_set">
          <legend><%= ts("#{tag_type.classify.pluralize}") %></legend>
          <h4><%= "#{tag_type.classify.pluralize}" %></h4>

          <% unless @tag_set.tag_set.tags_with_type(tag_type).empty? %>
            <!-- create a scrollable checkboxes section to wrap the tags, see application_helper -->
            <h5><%= internal_tag_set_form.label "#{tag_type}_tags_to_remove".to_sym, "Currently in set (check to remove): " %></h4>
            <%= options_section(internal_tag_set_form, 
                                "owned_tag_set[tag_set_attributes][#{tag_type}_tags_to_remove][]", 
                                "owned_tag_set_tag_set_attributes_#{tag_type}_tags_to_remove", 
                                @tag_set.tag_set.send("#{tag_type}_taglist"), 
                                nil, "name", "id") %>
          <% end %>
          <h5><%= internal_tag_set_form.label "#{tag_type}_tagnames_to_add".to_sym, "#{tag_type.classify.pluralize} to add: " %></h5>
          <p>
            <%= internal_tag_set_form.text_field "#{tag_type}_tagnames_to_add".to_sym, autocomplete_options("tag_type") %>
          </p>
        </fieldset>
      <% end %>
    <% end %>
  </fieldset>
  
  <fieldset>
  	<legend><%= ts('Submit') %></legend> 
    <p class="submit">
      <%= tag_set_form.submit ts('Submit') %>
    </p>
  </fieldset>
    
<% end %>