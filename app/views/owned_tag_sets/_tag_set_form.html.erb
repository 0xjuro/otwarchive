<h3><%= ts("Notes") %></h3>
<ul class="notes">
	<li>You can use tag sets when running a challenge, and eventually even when browsing.</li>
	<li>Visible tag sets can be viewed and used by others.</li> 
	<li>Tag sets that are open to nominations can take nominations from the public.</li> 
</p>

<!-- /descriptions-->

<!--main content-->
<h3 class="landmark">Tag Set Settings</h3>

<%= form_for(@tag_set, :url => tag_sets_path) do |tag_set_form| %>
  <%= error_messages_for @tag_set %>

  <% if @tag_set && !@tag_set.moderators.empty? %>
    <fieldset class="preface profile">
  		<legend>Management</legend>
  		<h3>Management</h3>
  		<p class="notes">
  			To add or remove an owner or moderator, enter their name. If they are currently on the list they will be removed; if not, they will be added.
  		</p>
  		<h4>Current Owners</h4>
  		<p><%= @tag_set.owners.map {|mod| mod.name}.sort.join(', ') =%></p>
  		<p><%= label_tag :owner_changes, ts("Add/Remove Owners: ") %></p>
  		<p>
  			<%= text_field_tag :owner_changes, nil, :size => 60 %>
  			<%= autocomplete_text_field("owner_changes", :methodname => "pseud_finder") %>
  		</p>

  		<h4>Current Moderators</h4>
  		<p><%= @tag_set.moderators.map {|mod| mod.name}.sort.join(', ') =%></p>
  		<p><%= label_tag :moderator_changes, ts("Add/Remove Moderators: ") %></p>
  		<p>
  			<%= text_field_tag :moderator_changes, nil, :size => 60 %>
  			<%= autocomplete_text_field("moderator_changes", :methodname => "pseud_finder") %>
  		</p>
  	</fieldset>
  <% end %>

	<fieldset class="preface profile">
    <legend>Description</legend>
    <h3>Description</h3>
		<dl>
			<dt><%= tag_set_form.label :title, ts("Title* (text only)") %></dt>
			<dd><%= tag_set_form.text_field :title %></dd>
			
			<dt><%= tag_set_form.label :description, ts("Brief Description") %></dt>
			<dd><%= tag_set_form.text_field :description %></dd>

			<dt><%= tag_set_form.label :visible, ts("Visible to the public?") %></dt>
			<dd><%= tag_set_form.check_box :visible %></dd>

			<dt><%= tag_set_form.label :nominated, ts("Open to nominations?") %></dt>
			<dd><%= tag_set_form.check_box :nominated %></dd>
		</dl>
	</fieldset>

  <fieldset class="preface profile">
    <legend>Tags In Set</legend>
    <h3>Tags In Set</h3>
    <% @tag_set.build_tag_set unless @tag_set.tag_set %>
    <%= tag_set_form.fields_for :tag_set do |internal_tag_set_form| %>
      <% TagSet::TAG_TYPES.each do |tag_type| %>
        <fieldset class="tag_set">
          <legend><%= ts("%{tag_type} Tags", :tag_type => tag_type.classify) %></legend>
          <h4><%= "#{tag_type.classify}" %></h4>

          <% unless @tag_set.tag_set.tags_with_type(tag_type).empty? %>
            <!-- create a scrollable checkboxes section to wrap the tags, see application_helper -->
            <h5><%= internal_tag_set_form.label "#{tag_type}_tags_to_remove".to_sym, "Currently in set (check to remove): " %></h4>
            <%= options_section(internal_tag_set_form, 
                                "owned_tag_set[tag_set_attributes][#{tag_type}_tags_to_remove]", 
                                "owned_tag_set_tag_set_attributes_#{tag_type}_tags_to_remove", 
                                @tag_set.tag_set.send("#{tag_type}_taglist"), 
                                nil, "name", "id") %>
          <% end %>
          <h5><%= internal_tag_set_form.label "#{tag_type}_tagnames_to_add".to_sym, "#{tag_type.classify.pluralize} to add: " %></h5>
          <p>
            <%= internal_tag_set_form.text_area "#{tag_type}_tagnames_to_add".to_sym, :value => "", :rows => 3 %>
            <%= autocomplete_text_field("owned_tag_set_tag_set_attributes_#{tag_type}_tagnames_to_add", :methodname => "canonical_#{tag_type}_finder") %>
          </p>
        </fieldset>
      <% end %>
    <% end %>
  </fieldset>
  
  <fieldset>
  	<legend><%= ts('Submit') %></legend> 
    <p class="submit">
      <%= tag_set_form.submit ts('Submit') %>
    </p>
  </fieldset>
    
<% end %>