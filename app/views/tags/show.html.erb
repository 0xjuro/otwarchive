<h2><%= @tag.name %></h2>
<%= error_messages_for :tag %>
<%- if can_wrangle? -%>
  <p><%= link_to 'Edit' + ' ' + @tag.name, {:controller => :tags, :action => :edit, :id => @tag} %></p>
<%- end -%>

<p><%=h t('tag_belongs_to', :default => "This tag belongs to the") %> <%= @tag.class::NAME %> <%=h "Category" %>.</p>

<%- if @tag.canonical -%>
  <p><%=h t('common_tag_can_use_to', :default => 'This is a common tag. You can use this tag to ') %> 
    <%= link_to 'filter works', {:controller => :works, :action => :index, :tag_id => @tag} %> <%=h t('and_to', :default => 'and to') %> 
    <%= link_to "filter bookmarks", {:controller => :bookmarks, :action => :index, :tag_id => @tag} %>.
  </p>
<%- end -%>

<%- if @tag.is_a?(Rating) && @tag.adult -%>
  <p><%=h t('adult_content', :default => 'This tag indicates adult content.') %></p>
<%- end -%>


<%- unless @tag.ambiguities.blank? -%>
  <p><%=h t('disambiguate', :default => 'Tags which disambiguate here:') %></p>
  <%- @tag.ambiguities.each do |ambiguous| %>
    <%= link_to_tag ambiguous %>
  <%- end -%>
<%- end -%>

<% if @tag.is_a?(Fandom) %>
  <p><%=h t('parents', :default => 'Parent tags (more general):') %></p>
  <%- (@tag.parents + [@tag.media]).uniq.compact.sort.each do |parent| %>
    <%= link_to_tag parent %>
  <%- end -%>
<% else %>
  <%- unless @tag.parents.blank? -%>
    <p><%=h t('parents', :default => 'Parent tags (more general):') %></p>
    <ul class="tags"><%= tag_link_list(@tag.parents.sort) %></ul>
  <%- end -%>
<%- end -%>

<%- if @tag.merger -%>
  <p><%=h t('merged', :default => 'This tag has been merged into') %> <%= link_to_tag @tag.merger %> <%=h 'for filtering.' %></p>
  <p><%=h t('works_show_up_in', :default => 'Works tagged with this tag will show up in') %> <%= link_to @tag.merger.name + "'s", {:controller => :works, :action => :index, :tag_id => @tag.merger} %> <%=h 'filter.' %></p>
  <p><%=h t('bookmarks_show_up_in', :default => 'Bookmarks tagged with this tag will show up in') %> <%= link_to @tag.merger.name + "'s", {:controller => :bookmarks, :action => :index, :tag_id => @tag.merger} %> <%=h 'filter.' %></p>
<%- end -%>

<%- unless @tag.mergers.blank? -%>
  <p><%=h t('same_meaning', :default => 'Tags with the same meaning:') %></p>
  <ul class="tags"><%= tag_link_list(@tag.mergers) %></ul>
<%- end -%>

<%- unless @tag.children.blank? -%>
  <% if @tag.is_a?(Ambiguity) %>
    <p><%=h t('disambiguators', :default => 'Disambiguators:') %></p>
  <% else %>
    <p><%=h t('child_tags', :default => 'Child tags (more specific):') %></p>
  <% end %>
  <%- @tag.children.uniq.compact.sort.group_by(&:type).each do |type, tags| %>
    <p><%= type.pluralize %>:</p>
    <ul class="tags"><%= tag_link_list(tags) %></ul>
  <%- end -%>
<%- end -%>

<%- if @works -%>

  <% if @tag.is_a?(Ambiguity) %>
    <p><%=h t('ambiguous_cannot_filter', :default => 'This tag is ambiguous and cannot be filtered on.') %></p>
  <% else %>
    <p><%=h t('not_common_cannot_filter', :default => "This tag has not been marked common and can't be filtered on (yet).") %></p>
  <% end %>
  
  <% unless @works.blank? %>
    <p><%=h t('works_used_it', :default => 'Works which have used it as a tag:') %></p>
    <% paginated_section @works, {:previous_label => '&laquo; Previous', :next_label => 'Next &raquo;'} do %>
      <ul class="work-list">
        <%- for work in @works -%>
          <%= render :partial => 'works/work_blurb', :locals => {:work => work} %>
        <%- end -%>
      </ul>
    <% end %>
  <% end %>

  <%- unless @bookmarks.blank? -%>
    <p><%=h t('bookmarks_used_it', :default => 'Bookmarks which have used it as a tag:') %></p>
    <% paginated_section @bookmarks, {:previous_label => '&laquo; Previous', :next_label => 'Next &raquo;'} do %>
      <ul class="work-list">
        <%- for bookmark in @bookmarks -%>
          <%= render :partial => 'bookmarks/bookmark', :locals => {:bookmark => bookmark} %>
        <%- end -%>
      </ul>
    <% end %>
  <%- end -%>

<%- end -%>
