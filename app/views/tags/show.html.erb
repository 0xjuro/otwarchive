<!--Descriptive page name, messages and instructions-->
<h2><%- if can_wrangle? -%>
<span class="navigation"><%= link_to ' Edit', {:controller => :tags, :action => :edit, :id => @tag} %> </span><%- end -%>
<%= @tag.name %>
</h2>
<%= error_messages_for :tag %>
<!--/descriptions-->


<!--subnavigation requested here in Coders 30/12/09 23:20 but I can't parse the requirement. Commenting correct position and structure: <ul class="navigation" role="navigation"><li>..</li></ul>-->

<!--main content-->
<p><%=h t('tag_belongs_to', :default => "This tag belongs to the") %> <%= @tag.class::NAME %> <%=h "Category" %>.
<%- if @tag.canonical -%>
  <%=h t('common_tag_can_use_to', :default => 'It\'s a common tag; you can use it to ') %> 
    <%= link_to 'filter works', {:controller => :works, :action => :index, :tag_id => @tag} %> <%=h t('and_to', :default => 'and to') %> 
    <%= link_to "filter bookmarks", {:controller => :bookmarks, :action => :index, :tag_id => @tag} %>.
<%- end -%>
</p>

<%- if @tag.is_a?(Rating) && @tag.adult -%>
  <p class="warning"><%=h t('adult_content', :default => 'This tag indicates adult content.') %></p>
<%- end -%>

<% if @tag.is_a?(Fandom) %>
  <h4><%=h t('parents', :default => 'Parent tags (more general):') %></h4>
  <ul class="tags">
	<%- (@tag.parents + [@tag.media]).uniq.compact.sort.each do |parent| %>
    <li><%= link_to_tag parent %></li>
  <%- end -%>
</ul>
<% else %>
  <%- unless @tag.parents.blank? -%>
    <h4><%=h t('parents', :default => 'Parent tags (more general):') %></h4>
    <ul class="tags"><%= tag_link_list(@tag.parents.sort) %></ul>
  <%- end -%>
<%- end -%>

<%- if @tag.merger -%>
  <p><%= @tag.name %> <%=h t('merged', :default => 'has been merged into') %> <%= link_to_tag @tag.merger %> <%=h 'for filtering.' %> <%=h t('works_tagged_with', :default => 'Works and bookmarks tagged with') %> <%= @tag.name %> <%=h t('will_show_up_in', :default => 'will show up in') %> <%= link_to @tag.merger.name + "'s", {:controller => :works, :action => :index, :tag_id => @tag.merger} %> <%=h 'filter.' %></p>
<%- end -%>

<%- unless @tag.mergers.blank? -%>
  <h4><%=h t('same_meaning', :default => 'Tags with the same meaning:') %></h4>
  <ul class="tags"><%= tag_link_list(@tag.mergers) %></ul>
<%- end -%>

<%- unless @tag.children.blank? -%>
  <p><%=h t('child_tags', :default => 'Child tags (more specific):') %></p>
  <%- @tag.children.uniq.compact.sort.group_by(&:type).each do |type, tags| %>
    <p><%= type.to_s.pluralize %>:</p>
    <ul class="tags"><%= tag_link_list(tags) %></ul>
  <%- end -%>
<%- end -%>

<%- if @works -%>

  <p><%=h t('not_common_cannot_filter', :default => "This tag has not been marked common and can't be filtered on (yet).") %></p>
  
  <% unless @works.blank? %>
    <h4><%=h t('works_used_it', :default => 'Works which have used it as a tag:') %></h4>
    <% paginated_section @works, {:previous_label => '&laquo; Previous', :next_label => 'Next &raquo;'} do %>
      <ul class="work index">
        <%- for work in @works -%>
          <%= render :partial => 'works/work_blurb', :locals => {:work => work} %>
        <%- end -%>
      </ul>
    <% end %>
  <% end %>

  <%- unless @bookmarks.blank? -%>
    <h4><%=h t('bookmarks_used_it', :default => 'Bookmarks which have used it as a tag:') %></h4>
    <% paginated_section @bookmarks, {:previous_label => '&laquo; Previous', :next_label => 'Next &raquo;'} do %>
      <ul class="bookmark work index">
        <%- for bookmark in @bookmarks -%>
          <%= render :partial => 'bookmarks/bookmark', :locals => {:bookmark => bookmark} %>
        <%- end -%>
      </ul>
    <% end %>
  <%- end -%>

<%- end -%>
<!--/content-->