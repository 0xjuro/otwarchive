<!-- prompt form -->
<div class="removeme">
<!-- 
CODE NOTES: 
This is meant to be used as a nested form inside other forms, so that multiple prompts can be submitted within a single form. 
It expects the local variables: 
"form" for the prompt form 
"is_offer" depending on if this is a request or offer
"index" representing which prompt this is, if there are multiple prompts being submitted

See the challenge_signup form for an example of how this is used. 
-->
<fieldset class="preface profile">
  <p>
    <% prompt_type = (form.object.class == Offer ? "offer" : (form.object.class == Request ? "request" : "prompt")) %>
    <% prompt_types = prompt_type.pluralize %>
    <% restriction = @challenge.send("#{prompt_type}_restriction") %>
    <%= form.hidden_field :collection_id, :value => @collection.id %>
  </p>
  
  <dl>
    <!-- tags section -->
    <% form.object.build_tag_set unless form.object.tag_set %>
    <%= form.fields_for :tag_set do |tag_set_form| %>
      <% TagSet::TAG_TYPES.each do |tag_type| %>
        <% num_allowed = eval("restriction.#{tag_type}_num_allowed") %>
        <% num_required = eval("restriction.#{tag_type}_num_required") %>
        <% taglist = restriction.tags_of_type(tag_type.classify).sort  %>
        <% has_tags = !taglist.empty? %>
    
        <% if num_allowed > 0 %>
          <dt <%= num_required > 0 ? 'class="required"' : '' %>>
              <%= tag_set_form.label tag_type.pluralize.to_sym, ((num_allowed > 1) ? tag_type.pluralize : tag_type).titleize %>
              <%= num_required == num_allowed ? " (#{num_required})" : " (#{num_required} - #{num_allowed})" %>:
          </dt>
          <dd>
            <% if has_tags %>
              <!-- checkboxes -->
              <% tag_fieldname = "challenge_signup[#{prompt_types}_attributes][#{index}][tag_set_attributes][#{tag_type}_tagnames][]" %>
              <% tag_field_id =  "challenge_signup_#{prompt_types}_attributes_#{index}_#{tag_type}" %>
              <% max_tagindex = 0 %>
              <ul onclick="$('<%= tag_field_id %>_hide').show(); $('<%= tag_field_id %>_more').hide();">
                <!-- FRONT END NOTE: generally we want checkbox after label but in this case makes form much more usable to keep clicking in same vertical line -->
                <% taglist.each_with_index do |tag, tagindex| %>
                  <li>
                    <% tag_checkbox_id = "#{tag_field_id}_#{tag.id}" %>
                    <!-- FIXME not saving entered checks through errors -->
                    <%= check_box_tag tag_fieldname, tag.name, false, :id => tag_checkbox_id %>
                    <%= label_tag tag_fieldname, tag.name, :id => tag_checkbox_id %>
                  </li>
                  
                  <% max_tagindex = tagindex %>
                  <% if tagindex == (Prompt::OPTIONS_TO_SHOW - 1) && taglist.size > (Prompt::OPTIONS_TO_SHOW * 2) %>
                    <!-- we add a blind-down area for more if we have a lot of checkboxes to show -->
                    </ul>
                    <h5 id="<%= tag_field_id %>_more" onclick="$('<%= tag_field_id %>_hide').show(); this.hide()">
                      <%= t("prompts.show_more_#{tag_type}", 
                        :default => "%{tag_count} more #{tag_type.pluralize} to choose from...",
                        :tag_count => (taglist.size - Prompt::OPTIONS_TO_SHOW) ) %>
                    </h5>
                    <div id="<%= tag_field_id %>_hide" class="hideme">
                    <ul>
                  <% end %>
                <% end # of taglist.each loop %>
                
                <% if max_tagindex >= Prompt::OPTIONS_TO_SHOW && taglist.size > (Prompt::OPTIONS_TO_SHOW * 2) %>
                  <!-- close the blind-down section we opened -->
                  </ul>
                  </div>
                <% else %>
                  </ul>
                <% end %>

              <!-- need to add hidden field to ensure this is passed if none of the boxes are checked -->
              <%= hidden_field_tag tag_fieldname, " " %>           
            <% else %>
              <!-- using an autocomplete -->
              <% tag_fieldname = "challenge_signup_#{prompt_types}_attributes_#{index}_tag_set_attributes_#{tag_type}_tagnames" %>
              <!-- FIXME not saving entered text through errors -->
              <%= tag_set_form.text_field "#{tag_type}_tagnames", :size => 50 %>
              <%= autocomplete_text_field tag_fieldname, :methodname => "canonical_#{tag_type}_finder" %>            
            <% end %>
          </dd>
        <% end %>
      <% end %>
    <% end %>
    
    <% if restriction.url_allowed %>
    <dt<%= restriction.url_required ? ' class="required"' : '' %>>
      <%= form.label :url , (@challenge.send("#{prompt_type}_url_label") || t('.prompts.url', :default => "Prompt URL: ")) %>
    </dt>
    <dd><%= form.text_field :url, :size => 50 %></dd>
    <% end %>

    <% if restriction.description_allowed  %>
      <dt<%= restriction.description_required ? ' class="required"' : '' %>>
        <%= form.label :description, (@challenge.send("#{prompt_type}_description_label") || t('.prompts.description', :default => "Description: ")) %>
      </dt>
      <dd><%= form.text_area :description, :rows => 6, :cols => 50 %></dd>
    <% end %>
    
    <% if restriction.optional_tags_allowed %>
      <% form.object.build_optional_tag_set unless form.object.optional_tag_set %>
      <%= form.fields_for :optional_tag_set_attributes do |optional_tag_set_form| %>
        <dt>
          <%= optional_tag_set_form.label :tagnames, t("optional_tag_set.tagnames", :default => "Optional Tags: ") %> <%= link_to_help("challenge-optional-tags-user")%>
          <p class="note"><%= t('.prompts.comma_separated', :default => "(comma-separated)") %></p>
        </dt>
        <dd>
          <% optional_tag_fieldname =  "challenge_signup_#{prompt_types}_attributes_#{index}_optional_tag_set_attributes_tagnames" %>
          <%= optional_tag_set_form.text_area :tagnames, :rows => 2, :cols => 50, :value => form.object.optional_tag_set.tagnames %>
          <%= autocomplete_text_field(optional_tag_fieldname, :methodname => "canonical_tag_finder") %>
        </dd>
      <% end %>
    <% end %>
     
  </dl>
  <% unless required %>
    <p class="navigation"><%= link_to_remove_section(t('.prompts.delete_prompt', :default => "Remove?"), form) %></p>
  <% end %>
</fieldset>
</div>
<!-- end of nested prompt form -->
