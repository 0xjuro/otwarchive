<!-- prompt form -->
<div class="removeme">
<% # CODE NOTES: 
  # This is meant to be used as a nested form inside other forms, so that multiple prompts can be submitted within a single form. 
  # It expects the local variables: 
  # "form" for the prompt form 
  # "index" representing which prompt this is, if there are multiple prompts being submitted
  # "edit_record" showing if this is editing an existing prompt or adding a new one

  # See the challenge_signup form for an example of how this is used. %>

<% prompt_type = form.object.class.name.downcase %>
<% prompt_types = prompt_type.pluralize %>
<% restriction = @challenge.send("#{prompt_type}_restriction") %>

<fieldset class="tagset">
  <% if index.is_a? String %>
    <legend><%= "#{prompt_type.capitalize} #{index}" %></legend>
    <h3><%= "#{prompt_type.capitalize} #{index}" %></h3>
  <% else %>
  	<legend><%= "#{prompt_type.capitalize} #{(index + 1)}" %></legend>
    <h3><%= "#{prompt_type.capitalize} #{(index + 1)}" %></h3>
  <% end %>

  <div>
    <%= form.hidden_field :collection_id, :value => @collection.id %>
  </div>
  
  <dl>
    <!-- tags section -->
    <%= render "prompts/prompt_form_tag_options", :form => form, :restriction => restriction %>
    
    <% if restriction.url_allowed %>
    <dt<%= restriction.url_required ? ' class="required"' : '' %>>
      <% url_label = @challenge.send("#{prompt_type}_url_label") %>
      <%= form.label :url , (url_label.blank? ? ts("Prompt URL: ") : url_label) %>
    </dt>
    <dd><%= form.text_field :url, :size => 50 %></dd>
    <% end %>

    <% if restriction.description_allowed  %>
      <dt<%= restriction.description_required ? ' class="required"' : '' %>>
        <% desc_label = @challenge.send("#{prompt_type}_description_label") %>
        <%= form.label :description, (desc_label.blank? ? ts("Description: ") : desc_label) %>
      </dt>
      <dd><%= form.text_area :description, :rows => 6, :cols => 50 %></dd>
    <% end %>
    
    <% if restriction.optional_tags_allowed %>
      <% form.object.build_optional_tag_set unless form.object.optional_tag_set %>
      <%= form.fields_for :optional_tag_set_attributes do |optional_tag_set_form| %>
        <dt>
          <%= optional_tag_set_form.label :tagnames, ts("Optional Tags: ") %> <%= link_to_help("challenge-optional-tags-user")%>
        </dt>
        <dd>
          <%= optional_tag_set_form.text_field :tagnames, autocomplete_options("tag") %>
        </dd>
      <% end %>
    <% end %>
    
    <% if @collection.challenge_type == "PromptMeme"  %>
      <dt>
        <%= form.label :anonymous, ts("Semi-anonymous prompt (note, this is not totally secure, and is still guessable in some places): ") %>
        <% if edit_record %>
        <% anon = form.object.anonymous %>
        <% else %>
        <% anon = @challenge.anonymous %>
        <% end %>
      </dt>
      <dd><%= form.check_box :anonymous, :checked => anon %></dd>
    <% end %>
     
  </dl>
  <% unless required %>
    <p class="navigation"><%= link_to_remove_section(ts("Remove?"), form) %></p>
  <% end %>
</fieldset>
</div>

<!-- this div is used to hold the last id for adding new prompts via javascript -->
<div class="last_id" style="display:none;"><%= index.is_a?(String) ? index : index+1 %></div>

<!-- end of nested prompt form -->
