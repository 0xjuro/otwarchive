<% 
    # This renders the bookmark form based on whatever kind of object we are bookmarking 
    # we need bookmarkable, action (create or update), and bookmark if it exists
    # if in_page is true then we assume that this is embedded within another page (eg the work page)
    # if dynamic is true then this has been rendered via ajax 
%>

<div id="bookmark-form">
<h3 class="landmark">Bookmark</h3>
  <% if bookmarkable.class == ExternalWork %><%= render "bookmarklet"%><% end %>

  <%= form_for([bookmarkable, bookmark], :url => {:controller => 'bookmarks', :action => action}) do |f| %>
    <% in_page ||= false %>
    <% dynamic ||= false %>
    <% if in_page %>
      <p class="close">
        <% if dynamic %>
          <a id="bookmark_form_close_for_<%= bookmarkable.id %>" title="cancel"><%= ts("x") %></a>
        <% else %>
          <a class="bookmark_form_placement_close" href="#comments" title="cancel"><%= ts("x") %></a>
        <% end %>        
      </p>
    <% end %>
  
    <fieldset>
      <dl>
        <dt class="landmark"><label><%= ts("Pseud") %>:</label></dt>
        <dd>
          <% if current_user.pseuds.count > 1 %>
            <%= select_tag "bookmark[pseud_id]", 
                  options_for_select(current_user.pseuds.map{|pseud| [pseud.name, pseud.id]}, 
                    bookmark.pseud ? bookmark.pseud.id : current_user.default_pseud.id) %>
          <% else %>
            <%= current_user.default_pseud.name %>
            <%= f.hidden_field :pseud_id, :value => "#{current_user.default_pseud.id}" %>
          <% end %>
        </dd>
      </dl>
    </fieldset>

    <% # What we're bookmarking %>
    <% if bookmarkable.class == ExternalWork && bookmarkable.new_record? %>
      <%= fields_for 'bookmark[external]', bookmarkable do |ew_form| %>
        <%= render "external_work_fields", :ew => ew_form%>
      <% end %>
    <% else %>
      <%= f.hidden_field :bookmarkable_id, :value => bookmarkable.id if bookmarkable %>
      <%= f.hidden_field :bookmarkable_type, :value => bookmarkable.class.to_s if bookmarkable %>
    <% end %>

    <fieldset>
      <legend>Write Comments</legend>
      <dl>
        <dt class="landmark"><%= f.label :notes, ts("Notes") %></dt>
        <dd>
          <!--allowed_html_instructions BACK END, can we externalise this massive list?-->
          <%= f.text_area :notes, :rows => 4, :class => "notes-field observe_textlength" %>
          <%= generate_countdown_html("bookmark_notes", ArchiveConfig.NOTES_MAX) %>
        </dd>

        <dt class="landmark"><%= f.label :tag_string, ts("Your Tags") %></dt>
        <dd>
          <%= f.text_field :tag_string, autocomplete_options('tag?type=all', :size => (in_page ? 60 : 80)) %>
          <p class="character_counter">
            <%= ts("Comma separated, %{max} characters per tag", :max => ArchiveConfig.TAG_MAX) %>
          </p>
        </dd>
      </dl>
    </fieldset>
  
    <fieldset>
      <legend>Choose type and submit</legend>
      <% if bookmarkable.class != ExternalWork %>
        <p><%= ts("The author's summary and tags are added automatically.") %></p>
      <% end %>
		<p> 
        <%= f.check_box :private %> <%= f.label :private, ts("Private bookmark?") %>
        <%= f.check_box :rec %> <%= f.label :rec, ts("Rec?") %>
      </p>
      <p class="submit">
        <%= f.submit(button_name) %>
        <% unless in_page %>
          <%= link_to ts("Back to My Bookmarks"), user_bookmarks_path(current_user) %>
        <% end %>
      </p>
    </fieldset>
  <% end %>
</div>
