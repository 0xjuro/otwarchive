<% # expects nom %>
<% unless @tagnames_seen[nom.tagname] %>
  <% @tagnames_seen[nom.tagname] = 1 %>

  <dl class="nomination">
    <% tag_type = nom.class.name.gsub(/Nomination/, '').downcase %>

    <dt>
      <%= nomination_tag_information(nom) %>
    </dt>
    <% if (nom_count = nom.times_nominated(@tag_set)) > 1 %>
      <dd class="count">(x<%= nom_count %>)</dd>
    <% end %>

    <% # this is necessary or else rails thinks the [] characters represent a sub-model! %>
    <% tagname = nom.tagname.gsub('[', '#LBRACKET').gsub(']', '#RBRACKET') %>

    <dd class="actions">
      <%= label_tag "#{tag_type}_approve_#{tagname}", :class => "action" do %>
        <%= check_box_tag "#{tag_type}_approve_#{tagname}", 1, params["#{tag_type}_approve_#{tagname}"] %>
        <%= ts("Accept") %>
      <% end %>
      <%= label_tag "#{tag_type}_reject_#{tagname}", :class => "action" do %>
        <%= check_box_tag "#{tag_type}_reject_#{tagname}", 1, params["#{tag_type}_reject_#{tagname}"] %>
        <%= ts("Reject") %>
      <% end %>
    </dd>

    <dd class="autocomplete"><%= text_field_tag "#{tag_type}_change_#{tagname}", nil, autocomplete_options("tag?type=#{tag_type}", :autocomplete_token_limit => 1, :title => ts("change tag name")) %></dd>

    <% if nom.synonym %>
      <dd title="<%= ts('official synonym') %>" class="synonym">
        <%= label_tag "#{tag_type}_synonym_#{tagname}" do %>
          (<%= check_box_tag "#{tag_type}_synonym_#{tagname}", nom.synonym, params["#{tag_type}_synonym_#{tagname}"] %> <%= ts('Choose %{official_tag} instead', :official_tag => nom.synonym) %>)
        <% end %>
      </dd>
    <% end %>
  </dl>

<% end %>
