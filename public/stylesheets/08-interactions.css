/*==INTERACTIONS: global form rules
(submit button styling is in actions.css with the other buttons)
These are the general rules for all form elements, and nearly ALL our forms use just these. 
Forms are normally composed in definition lists <dt label: dd input>
with some un/ordered lists, normally of checkbox options <li checkbox:label>
and some paragraphs, normally forms with a single <p label:input> .
We also have some CUSTOM ELEMENTS 
and a very few special rules for INTERACTION TYPES, which are, roughly:
.post, .login, make .associations, set .preferences, .search, .filter
*/

form    { clear:right; }

/*Guideline: Forms are written by lots of people, and, this is beta, change a LOT. 
I've written a load of possible different nests to give a reasonably/broadly consistent view whatever goes in, 
but it's probably not complete. */
fieldset, form dl, fieldset dl dl, fieldset fieldset fieldset, fieldset fieldset dl dl, dd.hideme 
        { background:#ddd; border:2px solid #f3efec; margin:0.643em; padding:0.643em;
          box-shadow:inset 1px 0 5px #999; }
fieldset dl, fieldset.navigation, fieldset dl fieldset dl
        { background:transparent; border:none; clear:right;
          box-shadow:none; }
fieldset fieldset, fieldset dl dl 
        { background:#f4effc; clear:right;}
fieldset dd dl, form .meta dd, fieldset dl fieldset dl, dd fieldset
        { margin: 0.643em 0;}
/*end nesting */

legend, input[type="hidden"]
        { height:0; width:0; font-size:0; opacity:0; padding:0; margin:0}
label   { cursor: pointer;}
input   { font-size:100%; }
input[type="radio"] + label, input[type="checkbox"] + label
        { padding-left: 1em }
input[type="text"], input[type="password"], input[type="email"], input[type="file"], textarea, input.text 
        { width:100%; border:1px solid #ccc; 
          box-shadow: inset 0px 1px 2px #ccc }
textarea 
        { min-height:12em;}
select 
        { vertical-align:text-top; width:100% }
option, .navigation option  
        { display:block; }
.datetime select 
        { width:32.5%; }
p.submit, input.submit, dd.submit 
        { text-align:right;}
p input, p select, p input.text 
        { width:auto; }
form p  { clear:both; margin:auto; padding:0.643em; }
form dt, form .meta dt 
        { float:left; clear:left; min-width:10.5em; width:25%; padding:0.25em 0.5625em 0 0; border-bottom:1px solid #f3efec; }
form dd, form .meta dd
        { float: left; width:72.5%; overflow:hidden;}
form code 
        { display:block;}
input:focus, select:focus, textarea:focus
        { background:#f3efec; }

/* CUSTOM ELEMENT: CHARACTER COUNTER */
p.character_counter 
        { font-size:smaller; text-align:right ;}
.character_counter span 
        { display:inline-block; width: 3.75em;}

/*CUSTOM ELEMENT: LIVE VALIDATION*/
.LV_validation_message 
        { font-weight:bold; }
.LV_valid 
        { color:#0c0;}
.LV_invalid 
        {color:#c00;}
.LV_invalid_field, input.LV_invalid_field:hover, input.LV_invalid_field:active, textarea.LV_invalid_field:hover, textarea.LV_invalid_field:active 
        { border: 1px solid #c00; }
        
/* CUSTOM ELEMENT: AUTO COMPLETE */
.autocomplete ul 
        {	background: #fff; border: 1px solid #eee; padding: 0.125em; line-height: 1.286;
	        background: rgba(255,255,255,0.9); box-shadow: 1px 3px 5px rgba(0,0,0,0.5) }
.autocomplete ul li 
        { padding: 0.125em;	margin: 0.25em auto auto; }
.autocomplete input
        { display: block;	margin: 0.25em 0 0;}
.autocomplete ul li:hover, li.selected 
        { background: url(/images/header-red.png) top left #900; color: #fff; }
.required .autocomplete
        { color:#222; }
.autocomplete .notice
        { font-size:0.875em; }
.autocomplete li.added
        { display: inline-block; white-space: nowrap; }

/* CUSTOM ELEMENT: SORTABLE LIST (note: hope to merge with "sortable")*/
.ui-sortable li 
        { border: 2px solid transparent; box-shadow:1px 1px 3px transparent}
.ui-sortable li:hover 
        { background: #ddd; border: 2px solid #999; cursor: move; 
          box-shadow:1px 1px 3px #bbb }

/* CUSTOM ELEMENT: DYNAMIC BOOKMARK (note: hope to generalise to class "dynamic") */
#bookmark-form fieldset, #bookmark-form dl
        { border:none; background:transparent; margin:0; padding:0; 
          box-shadow:none; }
#bookmark-form dd 
        { width:99%;}
#bookmark-form 
        { width:22em; padding:0.5em; 
          box-shadow:1px 2px 5px; }

/* INTERACTION: SEARCH*/
.search p, li.search form p
        { position:relative;}
.search span.tip 
        { background:#ddd;  border:1px solid #fff; padding:0.15em; position:absolute; left:-999em; font-size:0.75em}
.search:hover .tip
        { left:1em; top:3.5em; }
li.search:hover .tip 
        { left:0; top:2.5em;}
.search .tags dd.submit 
        { margin:-3em 0.643em 0;}

/* INTERACTION: FILTER */
form.filters 
        { width:22.5%; float:right; }
.filters .tags
        { display:block;}
form.filters dl 
        { margin-top:0.375em;  padding-top:0 }
.filters dd 
       { width:100%; }

/*INTERACTION: LOGIN SIGNUP*/

/*INTERACTION: POST (work, chapter, comment, news etc) */
.post .required .warnings
        { font-weight:normal; color:#2a2a2a;}

/* MODE: VERBOSE
forms with more than three fieldsets 
(01/09/11 all forms show nearly all options at the moment, some nested fieldsets hidden with .hideme
but I suggest simple and verbose views, 
with simple as default and verbose as child of simple, especially for 
.create (work, bookmark, challenge etc)*/
.verbose legend
        { height:auto; width:auto; font-size:100%; opacity:1; background:#f4effc;border:2px solid #ddd; padding:0.5em; 
           box-shadow:1px 2px 3px #999}
/* MODE: SIMPLE, developing here*/

 
 /* CONTEXT: dashboard */
 .dashboard fieldset 
         { clear:right; }
 .dashboard .filters dt 
         { width:auto;}
  

 






